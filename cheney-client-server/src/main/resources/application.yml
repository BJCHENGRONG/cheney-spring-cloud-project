server:
  port: 10084
  servlet:
    context-path: /c1
  max-http-header-size: 1048576
  tomcat:
    max-connections: 3000
    max-http-post-size: 1048576
    max-threads: 1000
spring:
  application:
    name: cheney-client-server
    jackson:
      time-zone: GMT+8
      date-format: yyyy-MM-dd HH:mm:ss
  ##客户端配置微服务分布式链路追踪
  sleuth:
    web:
      client:
        ## spring.sleuth.web.client.enabled：设置开启请求跟踪
        enabled: true
    sampler:
      ## spring.sleuth.sampler.probability：设置采样比例，默认是1.0
      probability: 1.0
  zipkin:
    ## Zipkin Server服务器地址
    base-url: http://localhost:10081/
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/mybatis_plus?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: root
## ====================== Flyway（自动创建数据库）
    #数据源连接池配置
    druid:
      initial-size: 10 # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      min-idle: 10 # 最小连接池数量
      maxActive: 200 # 最大连接池数量
      maxWait: 3000 # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置
      timeBetweenEvictionRunsMillis: 60000 # 关闭空闲连接的检测时间间隔.Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      minEvictableIdleTimeMillis: 300000 # 连接的最小生存时间.连接保持空闲而不被驱逐的最小时间
      testWhileIdle: true # 申请连接时检测空闲时间，根据空闲时间再检测连接是否有效.建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRun
      poolPreparedStatements: true # 开启PSCache
      maxPoolPreparedStatementPerConnectionSize: 20 #设置PSCache值
      connectionErrorRetryAttempts: 3 # 连接出错后再尝试连接三次
      breakAfterAcquireFailure: true # 数据库服务宕机自动重连机制
      timeBetweenConnectErrorMillis: 300000 # 连接出错后重试时间间隔
    ## ====================== Flyway(默认需要创建好数据库名)
    flyway:
      enabled: true    #是否开启flyway，默认true.
      baseline-on-migrate: true
      #数据库连接配置
      url: ${spring.datasource.url}
      user: ${spring.datasource.username}
      password: ${spring.datasource.password}
      placeholder-replacement: false
      init-sqls:
        - CREATE DATABASE IF NOT EXISTS `mybatis_plus` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
## ====================== Mybatis-plus
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql打印
    call-setters-on-nulls: true
  mapperLocations:
    - classpath*:/mapper/**/*.xml
    - classpath*:/modeler-mybatis-mappings/**/*.xml
## ====================== Eureka
eureka:
  instance:
  #prefer-ip-address: true      #以IP地址注册到服务中心,可以显示服务的IP地址
  client:
    service-url:
      defaultZone: http://admin:admin@localhost:10086/eureka/
## ====================== Feign
#使用okhttp提高qps，通过okhttp有连接池和超时时间进行调优，禁用默认的http，启用okhttp
feign:
  httpclient:
    enabled: true
  okhttp:
    enabled: false
  # feign启用hystrix，才能熔断、降级
  hystrix:
    enabled: true
## ====================== Hystrix
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000
            #如果配置ribbon的重试，hystrix的超时时间要大于ribbon的超时时间，ribbon才会重试
            #Hystrix的超时时间=(1 + MaxAutoRetries + MaxAutoRetriesNextServer) * ReadTimeout 比较好，具体看需求
## ====================== Ribbon
#下面的配置是针对客户端调用后端服务的 Ribbon 负载均衡策略的改变
#需要调整哪个就以哪个微服务的项目名称开头进行设置如下：
#下面的配置cheney-provider-server这个是微服务的id，也就是Eureka中注册的服务名称(多个项目ribbon配置的项目名称必须是一样的）
cheney-provider-server:
  ribbon:
    MaxAutoRetries: 1                 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
    MaxAutoRetriesNextServer: 1       #切换实例的重试次数
    OkToRetryOnAllOperations: false   #对所有的操作请求都进行重试，如果是get则可以，如果是post,put等操作没有实现幂等的情况下是很危险的
    ConnectTimeout: 10000             #请求连接的超时时间
    ReadTimeout: 10000                #请求处理的超时时间
    #RoundRobinRule方式轮询选择server（默认）
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
## ====================== knife4j
knife4j:
  enable: true
  ## 是否是正式环境，正式环境是不允许访问，默认是false
  production: false
  ##是否启用加密
  basic:
    enable: false
    username: admin
    password: admin
  setting:
    ## 禁用默认的Footer显示
    enableFooter: true
    ## 启用自定义Footer
    enableFooterCustom: true
    ## 自定义内容
    footerCustomContent: Apache License 2.0 | Copyright  2019-[浙江八一菜刀研究基地](https://gitee.com/xiaoym/knife4j)
