<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- 注意：本次是是以Cheney-provider-server工程为例子，来做ribbon测试用的，所以本次项目和Cheney-provider-server一样，不同的是artifactId和端口 -->
    <!-- 注意：ribbon负载均衡测试，这里的名字要和做负载均衡的项目cheney-provider-server一样 -->
    <!-- ribbon无需引用其他的pom依赖，ribbon已经整合在eureka服务包中，所以无需引用其他包 -->
    <!-- 说明：这里的ribbon负载均衡默认是开启的无需额外开启，也没有其他配置，这是Eureka中自带的功能 -->

    <!-- 引入父工程的POM依赖 -->
    <parent>
        <groupId>com.cheneycloud</groupId>
        <artifactId>cheney-spring-cloud-project</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <!-- 定义自己的groupID和artifactId版本-->
    <groupId>com.provider.demo</groupId>
    <artifactId>cheney-provider-ribbon-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>cheney-provider-ribbon-server</name>
    <description>Demo project for Spring Boot Ribbon Test</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <!-- 依赖 -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 引用通用自定义的Common组件包 -->
        <dependency>
            <groupId>com.cheneycore</groupId>
            <artifactId>cheney-common-core</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
